name: Build

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/checkout@v3

      - name: install deps
        run: npm ci # artifact

      - name: build
        run: npm run build

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            ./dist
            .Dockerfile
          retention-days: 1

  docker:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      image: ${{ steps.image.outputs.image }}
    environment: docker
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build

      - name: create tag
        id: image
        run: echo image=$(date '+%Y-%m-%d_%H-%M') >> $GITHUB_OUTPUT

      - name: create image name
        id: tag
        run: echo tag=ghcr.io/${{ vars.DOCKER_USER }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ steps.image.outputs.image }} >> $GITHUB_OUTPUT

      - name: docker build
        run: docker build -f .Dockerfile ./dist -t ${{ steps.tag.outputs.tag }}

      - name: docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: docker push
        run: docker push ${{ steps.tag.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest
    environment: deploy
    needs: docker
    steps:
      - run: echo "${{ secrets.SSH_KEY }}" >> ssh_key
      - run: chmod 600 ssh_key
      - run: ssh -o StrictHostKeyChecking=no -i ssh_key ${{ secrets.DROPLET }} "sed -i 's/^STATIC_TAG=.*/STATIC_TAG=${{needs.docker.outputs.image}}/' ~/app/.env"
      - run: ssh -o StrictHostKeyChecking=no -i ssh_key ${{ secrets.DROPLET }} "cd ~/app && docker compose up -d"
      - run: rm ssh_key
